/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package filesorter;

import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.BasicFileAttributes;
import java.nio.file.attribute.FileTime;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.nio.file.attribute.DosFileAttributeView;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author viyan_ochon
 */
public class fileSorterApp extends javax.swing.JFrame {
       tableRecent tableRecent = new tableRecent();
    /** Creates new form fileSorterApp */
    public fileSorterApp() {
        initComponents();
        readFileText();
        readHistoryFile();
        readHiddenFile();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pngCheck = new javax.swing.JCheckBox();
        svgCheck = new javax.swing.JCheckBox();
        jpgCheck = new javax.swing.JCheckBox();
        allImages = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        xlsCheck = new javax.swing.JCheckBox();
        pptCheck = new javax.swing.JCheckBox();
        wordCheck = new javax.swing.JCheckBox();
        pdfCheck = new javax.swing.JCheckBox();
        allDocument = new javax.swing.JCheckBox();
        csvCheck = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        mpegCheck = new javax.swing.JCheckBox();
        movCheck = new javax.swing.JCheckBox();
        mp4Check = new javax.swing.JCheckBox();
        aviCheck = new javax.swing.JCheckBox();
        allVidio = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        rarCheck = new javax.swing.JCheckBox();
        zipCheck = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        exeCheck = new javax.swing.JCheckBox();
        batCheck = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        javascriptCheck = new javax.swing.JCheckBox();
        phpCheck = new javax.swing.JCheckBox();
        htmlCheck = new javax.swing.JCheckBox();
        cssCheck = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        cppCheck = new javax.swing.JCheckBox();
        pyCheck = new javax.swing.JCheckBox();
        javCheck = new javax.swing.JCheckBox();
        jPanel16 = new javax.swing.JPanel();
        jsonCheck = new javax.swing.JCheckBox();
        sqlCheck = new javax.swing.JCheckBox();
        jPanel20 = new javax.swing.JPanel();
        mpeg = new javax.swing.JCheckBox();
        mp3 = new javax.swing.JCheckBox();
        wav = new javax.swing.JCheckBox();
        allAudio = new javax.swing.JCheckBox();
        ogg = new javax.swing.JCheckBox();
        jPanel21 = new javax.swing.JPanel();
        fla = new javax.swing.JCheckBox();
        ai = new javax.swing.JCheckBox();
        psd = new javax.swing.JCheckBox();
        drawio = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        imagesFound = new javax.swing.JLabel();
        vidiosFound = new javax.swing.JLabel();
        docsFound = new javax.swing.JLabel();
        prgsFound = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        recentPathTabel = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableHistory = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableHidden = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoFileSorter = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        pathOutputLocation = new javax.swing.JTextField();
        pathInputLocation = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        inputFileLocation = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        hideFolder = new javax.swing.JCheckBox();
        deleteTempFolder = new javax.swing.JCheckBox();
        showFolder = new javax.swing.JCheckBox();
        jPanel18 = new javax.swing.JPanel();
        gbCbox = new javax.swing.JCheckBox();
        mbCbox = new javax.swing.JCheckBox();
        kbCbox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        sizeFile = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        countFolder = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        namaFolder = new javax.swing.JTextField();
        inputTextFile = new javax.swing.JTextField();
        inputRekursifBtn = new javax.swing.JButton();
        operator = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        uts = new javax.swing.JCheckBox();
        uas = new javax.swing.JCheckBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();
        kuis = new javax.swing.JCheckBox();
        tugasMateri = new javax.swing.JCheckBox();
        renameFiles = new javax.swing.JCheckBox();
        jButton10 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1650, 1080));

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Type File"));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        pngCheck.setText("png");
        pngCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pngCheckActionPerformed(evt);
            }
        });

        svgCheck.setText("svg");
        svgCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                svgCheckActionPerformed(evt);
            }
        });

        jpgCheck.setText("jpg");
        jpgCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpgCheckActionPerformed(evt);
            }
        });

        allImages.setText("all");
        allImages.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                allImagesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pngCheck)
                    .addComponent(svgCheck)
                    .addComponent(jpgCheck)
                    .addComponent(allImages))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pngCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(svgCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpgCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allImages)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Document"));

        xlsCheck.setText("xls");

        pptCheck.setText("ppt");

        wordCheck.setText("word");

        pdfCheck.setText("pdf");

        allDocument.setText("all");
        allDocument.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                allDocumentStateChanged(evt);
            }
        });
        allDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allDocumentActionPerformed(evt);
            }
        });

        csvCheck.setText("csv");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(wordCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(xlsCheck))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(pdfCheck)
                                .addGap(18, 18, 18)
                                .addComponent(pptCheck))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(csvCheck)
                                .addGap(18, 18, 18)
                                .addComponent(allDocument)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pdfCheck)
                    .addComponent(pptCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordCheck)
                    .addComponent(xlsCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(csvCheck)
                    .addComponent(allDocument))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Vidio"));

        mpegCheck.setText("mpeg");

        movCheck.setText("mov");

        mp4Check.setText("mp4");

        aviCheck.setText("avi");
        aviCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aviCheckActionPerformed(evt);
            }
        });

        allVidio.setText("all");
        allVidio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                allVidioStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mp4Check)
                    .addComponent(movCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(allVidio)
                    .addComponent(mpegCheck)
                    .addComponent(aviCheck))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mp4Check)
                    .addComponent(aviCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movCheck)
                    .addComponent(mpegCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allVidio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Arsip"));

        rarCheck.setText("rar");

        zipCheck.setText("zip");
        zipCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zipCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(rarCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(zipCheck)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rarCheck)
                    .addComponent(zipCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Programs"));

        exeCheck.setText("exe");
        exeCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exeCheckActionPerformed(evt);
            }
        });

        batCheck.setText("bat");
        batCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(exeCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(batCheck)
                .addGap(0, 22, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exeCheck)
                    .addComponent(batCheck))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Web development"));

        javascriptCheck.setText("js");

        phpCheck.setText("php");
        phpCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phpCheckActionPerformed(evt);
            }
        });

        htmlCheck.setText("html");
        htmlCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                htmlCheckActionPerformed(evt);
            }
        });

        cssCheck.setText("css");
        cssCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cssCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(javascriptCheck)
                        .addGap(18, 18, 18)
                        .addComponent(cssCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phpCheck))
                    .addComponent(htmlCheck))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(javascriptCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cssCheck)
                    .addComponent(phpCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(htmlCheck))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Desktop development"));

        cppCheck.setText("cpp");

        pyCheck.setText("py");
        pyCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pyCheckActionPerformed(evt);
            }
        });

        javCheck.setText("jav");
        javCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(cppCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pyCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(javCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cppCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pyCheck)
                    .addComponent(javCheck))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Desktop development"));

        jsonCheck.setText("json");

        sqlCheck.setText("sql");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(jsonCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sqlCheck)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jsonCheck)
                    .addComponent(sqlCheck))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Auido"));

        mpeg.setText("mpeg");

        mp3.setText("mp3");
        mp3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mp3ActionPerformed(evt);
            }
        });

        wav.setText("wav");
        wav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wavActionPerformed(evt);
            }
        });

        allAudio.setText("all");
        allAudio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                allAudioStateChanged(evt);
            }
        });

        ogg.setText("ogg");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mp3)
                            .addComponent(mpeg))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wav)
                            .addComponent(ogg)))
                    .addComponent(allAudio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mp3)
                    .addComponent(wav))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mpeg)
                    .addComponent(ogg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allAudio)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("File mentah"));

        fla.setText("flash");
        fla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flaActionPerformed(evt);
            }
        });

        ai.setText("ai");
        ai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aiActionPerformed(evt);
            }
        });

        psd.setText("psd");
        psd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psdActionPerformed(evt);
            }
        });

        drawio.setText("drawio");
        drawio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(fla)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ai))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(psd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(drawio)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fla)
                    .addComponent(ai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(psd)
                    .addComponent(drawio))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel20.getAccessibleContext().setAccessibleName("Audio");

        jScrollPane3.setViewportView(jPanel1);

        jPanel11.setBackground(new java.awt.Color(204, 204, 204));
        jPanel11.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        imagesFound.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        imagesFound.setForeground(new java.awt.Color(102, 102, 102));
        imagesFound.setText("Images : ");

        vidiosFound.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        vidiosFound.setForeground(new java.awt.Color(102, 102, 102));
        vidiosFound.setText("Vidios : ");

        docsFound.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        docsFound.setForeground(new java.awt.Color(102, 102, 102));
        docsFound.setText("Documents : ");

        prgsFound.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        prgsFound.setForeground(new java.awt.Color(102, 102, 102));
        prgsFound.setText("Program : ");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagesFound)
                .addGap(74, 74, 74)
                .addComponent(docsFound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vidiosFound, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(prgsFound, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imagesFound)
                    .addComponent(docsFound)
                    .addComponent(vidiosFound)
                    .addComponent(prgsFound))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jButton3.setText("Delete Recent Record");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel"));

        recentPathTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recent Path Input", "Recent Path Output"
            }
        ));
        recentPathTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recentPathTabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(recentPathTabel);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tabel Recent", jPanel12);

        tableHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name File", "Input  Path", "Output Path", "Extension"
            }
        ));
        tableHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHistoryMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableHistory);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tabel History", jPanel13);

        tableHidden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "nama", "path", "ekstensi", "tanggal"
            }
        ));
        jScrollPane5.setViewportView(tableHidden);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Hidden folder", jPanel14);

        jButton5.setText("Delete History Record");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setText("View Full Data");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setMaximumSize(new java.awt.Dimension(32767, 2000));
        jPanel4.setPreferredSize(new java.awt.Dimension(359, 300));

        infoFileSorter.setColumns(20);
        infoFileSorter.setRows(5);
        jScrollPane1.setViewportView(infoFileSorter);

        jButton4.setText("Output Locaton");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        pathOutputLocation.setMinimumSize(new java.awt.Dimension(14, 20));

        pathInputLocation.setMinimumSize(new java.awt.Dimension(14, 20));

        jButton1.setText("sort ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        inputFileLocation.setText("input Location");
        inputFileLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileLocationActionPerformed(evt);
            }
        });

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("tools"));

        hideFolder.setText("Hide Folder");

        deleteTempFolder.setText("Delete Empty Folder");
        deleteTempFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTempFolderActionPerformed(evt);
            }
        });

        showFolder.setText("show folder");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(deleteTempFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hideFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(showFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteTempFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hideFolder))
                .addGap(9, 9, 9)
                .addComponent(showFolder)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Utilities", jPanel15);

        gbCbox.setText("gb");
        gbCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gbCboxActionPerformed(evt);
            }
        });

        mbCbox.setText("mb");

        kbCbox.setText("kb");

        jLabel5.setText("kurang dari :");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kbCbox)
                .addGap(12, 12, 12)
                .addComponent(mbCbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gbCbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sizeFile, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kbCbox)
                    .addComponent(mbCbox)
                    .addComponent(gbCbox)
                    .addComponent(sizeFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("orgnize by size file", jPanel18);

        jButton2.setText("reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pathOutputLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pathInputLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathInputLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathOutputLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("tab1", jPanel4);

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Banyak folder");

        jLabel2.setText("Nama folder");

        jButton6.setText("Submit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        namaFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaFolderActionPerformed(evt);
            }
        });

        inputTextFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFileActionPerformed(evt);
            }
        });

        inputRekursifBtn.setText("input location");
        inputRekursifBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputRekursifBtnActionPerformed(evt);
            }
        });

        operator.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "_", " -", "#", " ~", " |" }));
        operator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatorActionPerformed(evt);
            }
        });

        jLabel3.setText("Operator penghubung nama folder");

        jLabel4.setText("Lokasi folder");

        uts.setText("folder uts");

        uas.setText("folder uas");

        info.setColumns(20);
        info.setRows(5);
        jScrollPane6.setViewportView(info);

        kuis.setText("kuis");

        tugasMateri.setText("folder > tugas dan materi ");
        tugasMateri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tugasMateriActionPerformed(evt);
            }
        });

        renameFiles.setText("rename all files");

        jButton10.setText("jButton10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(inputTextFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputRekursifBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(operator, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addComponent(uts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(uas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kuis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(countFolder)
                    .addComponent(namaFolder)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(tugasMateri)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(renameFiles))
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jButton10)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputTextFile, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputRekursifBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(operator, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(namaFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(uts)
                    .addComponent(uas)
                    .addComponent(kuis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tugasMateri)
                    .addComponent(renameFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("tab2", jPanel17);

        jPanel19.setBackground(new java.awt.Color(204, 204, 204));
        jPanel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTabbedPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(577, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(456, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1650, 1080));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try{
            File file2 = new File("D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\history.txt");

            //if the file not exist create one
            if(!file2.exists()){
                file2.createNewFile();
            }

            FileWriter fw = new FileWriter(file2.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write("Name File, Input Path, Output Path, Extension");
            //loop for jtable
            bw.write("");

            //close BufferedWriter
            bw.close();
            //close FileWriter
            fw.close();
            readHistoryFile();
            JOptionPane.showMessageDialog(null, "Data Exported");
        } catch (IOException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
   private double getFileSizeMegaBytes(File file) {
		
       return (double) file.length() / (1024 * 1024);
	}
	
	private static double getFileSizeKiloBytes(File file) {
		return (double) file.length() / 1024 ;
	}

	private static String getFileSizeBytes(File file) {
		return file.length() + " bytes";
	}
        
    public void  moveFilesBySize(String nama, int sizeFiles, String extensiFile, String fileLength) throws IOException{
         
        
        
          File file1 = new File(pathOutputLocation.getText() + "\\"+ "less_than_" + sizeFile.getValue() + fileLength);
                    
                    if(file1.mkdirs()){
                        infoFileSorter.append("(INFO!)Berhasil membuat folder : "+sizeFile.getValue() +"\n");
                    }
                    
        Files.move (Paths.get(pathInputLocation.getText()+"\\"+nama),  
                    Paths.get(pathOutputLocation.getText()+ "\\" + "less_than_" + sizeFile.getValue() + fileLength + "\\" + nama ));
      
          
      
          
        
      
       
    }  
    
 
       
     
    private void tableHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHistoryMouseClicked
        Desktop desktop = Desktop.getDesktop();
        File dirToOpen = null;
        try {

            String path;
            path = tableHistory.getValueAt(tableHistory.getSelectedRow(), 2).toString();
            Runtime runtime = Runtime.getRuntime();
            runtime.exec("explorer.exe "+path);
            System.out.println("open");
        } catch (Exception E) {
            System.out.println("File Not Found");
        }
    }//GEN-LAST:event_tableHistoryMouseClicked

    private void recentPathTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recentPathTabelMouseClicked
        pathInputLocation.setText(recentPathTabel.getValueAt(recentPathTabel.getSelectedRow(), 0).toString());
        pathOutputLocation.setText(recentPathTabel.getValueAt(recentPathTabel.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_recentPathTabelMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            //the file path
            File file = new File("D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\table.txt");

            //if the file not exist create one
            if(!file.exists()){
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write("Recent Path Input, Recent Path Output");
            //loop for jtable
            bw.write("");

            //close BufferedWriter
            bw.close();
            //close FileWriter
            fw.close();
            JOptionPane.showMessageDialog(null, "Data Exported");
            readFileText();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void javCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_javCheckActionPerformed

    private void pyCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pyCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pyCheckActionPerformed

    private void cssCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cssCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cssCheckActionPerformed

    private void htmlCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_htmlCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_htmlCheckActionPerformed

    private void phpCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phpCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phpCheckActionPerformed

    private void batCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batCheckActionPerformed

    private void exeCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exeCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exeCheckActionPerformed

    private void zipCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zipCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zipCheckActionPerformed

    private void allVidioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_allVidioStateChanged
        if(allVidio.isSelected()){
            mp4Check.setSelected(true);
            aviCheck.setSelected(true);
            movCheck.setSelected(true);
            mpegCheck.setSelected(true);
            

        }

        if(!allVidio.isSelected()){
            mp4Check.setSelected(false);
            aviCheck.setSelected(false);
            movCheck.setSelected(false);
            mpegCheck.setSelected(false);
        }
    }//GEN-LAST:event_allVidioStateChanged

    private void aviCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aviCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aviCheckActionPerformed

    private void allDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allDocumentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_allDocumentActionPerformed

    private void allDocumentStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_allDocumentStateChanged
        if(allDocument.isSelected()){
            wordCheck.setSelected(true);
            xlsCheck.setSelected(true);
            pptCheck.setSelected(true);
            pdfCheck.setSelected(true);
            csvCheck.setSelected(true);

        }

        if(!allDocument.isSelected()){
            wordCheck.setSelected(false);
            pptCheck.setSelected(false);
            pdfCheck.setSelected(false);
            xlsCheck.setSelected(false);
            csvCheck.setSelected(false);
        }
    }//GEN-LAST:event_allDocumentStateChanged

    private void allImagesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_allImagesStateChanged
        if(allImages.isSelected()){
            jpgCheck.setSelected(true);
            svgCheck.setSelected(true);
            pngCheck.setSelected(true);

        }

        if(!allImages.isSelected()){
            jpgCheck.setSelected(false);
            svgCheck.setSelected(false);
            pngCheck.setSelected(false);
        }
    }//GEN-LAST:event_allImagesStateChanged

    private void jpgCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpgCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpgCheckActionPerformed

    private void svgCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_svgCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_svgCheckActionPerformed

    private void pngCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pngCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pngCheckActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            if(hideFolder.isSelected()){
                File f = new File(pathInputLocation.getText());

                DefaultTableModel mdhd = (DefaultTableModel) tableHidden.getModel();

                String nameFiles = f.getName();
                int j = nameFiles.lastIndexOf(".");
                String extensionFile =  nameFiles.substring(j+1);

                String pattern = "yyyy-MM-dd";
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);

                String date = simpleDateFormat.format(new Date());
                mdhd.addRow(new Object[]{nameFiles, pathInputLocation.getText(),extensionFile.toUpperCase(), date});
                Path filePath = Paths.get(pathInputLocation.getText());
                DosFileAttributeView attrs = Files.getFileAttributeView(filePath, DosFileAttributeView.class);
                attrs.setSystem(true);
                attrs.setHidden(true);
                attrs.setReadOnly(true);

                writeHistoryHidden();

            }

            if(showFolder.isSelected()){
                Path filePath = Paths.get(pathInputLocation.getText());
                DosFileAttributeView attrs = Files.getFileAttributeView(filePath, DosFileAttributeView.class);
                attrs.setSystem(false);
                attrs.setHidden(false);
                attrs.setReadOnly(false);

            }

            if(deleteTempFolder.isSelected()){
                
                File folder = new File(pathInputLocation.getText());
                File[] listOfFiles = folder.listFiles();


                for (File file : listOfFiles) {
                    if (file.isDirectory() && file.length() == 0) {
                        System.out.println(file.getName());
                        file.delete();
                    }
                }
            }

        } catch (IOException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void deleteTempFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTempFolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteTempFolderActionPerformed

    private void inputFileLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileLocationActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        String fileName = f.getAbsolutePath();
        pathInputLocation.setText(fileName);
    }//GEN-LAST:event_inputFileLocationActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            File f = new File(pathInputLocation.getText());

            File[] files = f.listFiles();

            getFoundFile();
            int number = 0;
            writeFileText();

            for (int i = 0; i < files.length; i++) {   
                int j = files[i].getName().lastIndexOf(".");
                String extensionFile = files[i].getName().substring(j+1);
                String nameFile = files[i].getName();

                String doc = "Dokumen";
                String vid = "Vidio";
                String arr = "Arsip";
                String prg = "Programs";
                String aud = "Audio";
                String mth = "Editable-File";
                
                String fileLength = "";
                if(kbCbox.isSelected()){
                   int kb = (int) getFileSizeKiloBytes(files[i]);
                   int sf = (int) sizeFile.getValue();       
                    if(files[i].isFile() && sf >= kb){
                        fileLength = "KB";
                        moveFilesBySize(files[i].getName(), kb, extensionFile, fileLength);
                    }

                }
                
                 if(mbCbox.isSelected()){    
                   int mb = (int) getFileSizeMegaBytes(files[i]);
                   int sf = (int) sizeFile.getValue();
                    if(files[i].isFile() && sf >= mb){
                        fileLength = "MB";
                        moveFilesBySize(files[i].getName(), mb, extensionFile, fileLength);
                    }
                }
                if(jpgCheck.isSelected()){
                    
                    if (extensionFile.contains("jpg") && files[i].isFile()){
                        number++;
                        moveFileImages(extensionFile, nameFile,"Images", number);
                    }
                }

                if(pngCheck.isSelected() ){
                    number++;
                    if (extensionFile.contains("png") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, "Images",number);
                    }
                }

                if(svgCheck.isSelected() ){
                    number++;
                    if (extensionFile.contains("svg") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, "Images", number);
                    }
                }

                if(pptCheck.isSelected()){
                    number++;
                    if (extensionFile.contains("ppt") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, doc, number);
                    }
                }

                if(wordCheck.isSelected() ){
                    if (extensionFile.contains("doc") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, doc, number);
                    }
                }

                if(xlsCheck.isSelected() ){
                    if (extensionFile.contains("xls") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, doc, i);
                    }
                }

                if(pdfCheck.isSelected() ){
                    if (extensionFile.contains("pdf") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, doc, i);
                    }
                }

                if(mp4Check.isSelected() ){
                    if (extensionFile.contains("mp4") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, vid, i);
                    }
                }

                if(aviCheck.isSelected() ){
                    if (extensionFile.contains("avi") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, vid, i);
                    }
                }

                if(rarCheck.isSelected() ){
                    if (extensionFile.contains("rar") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, arr, i);
                    }
                }

                if(zipCheck.isSelected() ){
                    if (extensionFile.contains("zip") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, arr, i);
                    }
                }

                if(exeCheck.isSelected() ){
                    if (extensionFile.contains("exe") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(batCheck.isSelected() ){
                    if (extensionFile.contains("bat") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(javascriptCheck.isSelected()){
                    if(extensionFile.contains("js") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(phpCheck.isSelected()){
                    if(extensionFile.contains("php") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(cssCheck.isSelected()){
                    if(extensionFile.contains("css") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(htmlCheck.isSelected()){
                    if(extensionFile.contains("html") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(cppCheck.isSelected()){
                    if(extensionFile.contains("cpp") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(pyCheck.isSelected()){
                    if(extensionFile.contains("py") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(javCheck.isSelected()){
                    if(extensionFile.contains("java") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(sqlCheck.isSelected()){
                    if(extensionFile.contains("sql") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(csvCheck.isSelected()){
                    if(extensionFile.contains("csv") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }

                if(jsonCheck.isSelected()){
                    if(extensionFile.contains("json") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }
                
                if(jsonCheck.isSelected()){
                    if(extensionFile.contains("pl") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, prg,i);
                    }
                }
                 if(mp3.isSelected()){
                    if(extensionFile.contains("mp3") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, aud,i);
                    }
                }
                 
                if(mpeg.isSelected()){
                    if(extensionFile.contains("mpeg") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, aud,i);
                    }
                } 
                
                if(fla.isSelected()){
                    if(extensionFile.contains("fla") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, mth,i);
                    }
                } 
                
                  if(ai.isSelected()){
                    if(extensionFile.contains("ai") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, mth,i);
                    }
                } 
                 
                
                if(jsonCheck.isSelected()){
                    if(extensionFile.contains("drawio") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, doc,i);
                    }
                }
                
                if(psd.isSelected()){
                    if(extensionFile.contains("psd") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, mth,i);
                    }
                }
                
                 if(ogg.isSelected()){
                    if(extensionFile.contains("ogg") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, aud,i);
                    }
                }
                 
                  if(wav.isSelected()){
                    if(extensionFile.contains("wav") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, aud,i);
                    }
                }
                  
                 if(drawio.isSelected()){
                    if(extensionFile.contains("drawio") && files[i].isFile()){
                        moveFileImages(extensionFile, nameFile, mth,i);
                    }
                }

            }

        }
        catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        String fileName = f.getAbsolutePath();
        pathOutputLocation.setText(fileName);
        pathOutputLocation.setEditable(false);
        DefaultTableModel model = (DefaultTableModel) recentPathTabel.getModel();

        model.addRow(new Object[]{pathInputLocation.getText(),pathOutputLocation.getText()});
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

              
        
       int value = (Integer) countFolder.getValue();
       String opprt = "";
        
      

       for(int i = 1; i <= value; i++){
       
        if(i == 7 && uts.isSelected()){
           File dir = new File(inputTextFile.getText() + "\\" + "UTS");
           boolean berhasil = dir.mkdirs();
           if(berhasil){
              info.append("\nberhasi membuat folder uts..");
           }else{
              info.append("error..");
           }
        }else if(i == 14 && uas.isSelected()){
           File dir = new File(inputTextFile.getText() + "\\" + "UAS");
           boolean berhasil = dir.mkdirs();
           if(berhasil){
            info.append("\nberhasi membuat folder uas");
           }else{
            info.append("error");
           }
        }
        
      
        
        if(kuis.isSelected()){
           File dir = new File(inputTextFile.getText() + "\\" + "KUIS");
           boolean berhasil = dir.mkdirs();
           if(berhasil){
            info.append("\nberhasi membuat folder Kuis");
           }else{
            info.append("error");
           }
        }
        
        if(operator.getSelectedIndex() == 0){
            opprt = "_";
        }
        
        if(operator.getSelectedIndex() == 1){
            opprt = "-";
        }
        if(operator.getSelectedIndex() == 2){
            opprt = "#";
        }
        if(operator.getSelectedIndex() == 3){
            opprt = "~";
        }
        if(operator.getSelectedIndex() == 4){
            opprt = "|";
        }
        
        
       File dir = new File(inputTextFile.getText() + "\\" + namaFolder.getText() + opprt + i);
       if(tugasMateri.isSelected()){
          File dir1 = new File(inputTextFile.getText() + "\\" + namaFolder.getText() + opprt + i + "\\" + "Tugas");
          File dir2 = new File(inputTextFile.getText() + "\\" + namaFolder.getText() + opprt + i +"\\" + "Materi");
          boolean berhasil1 = dir1.mkdirs();
          boolean berhasil2 = dir2.mkdirs();
       if(berhasil1){
           info.append("\nberhasi membuat folder"  + namaFolder.getText() + opprt + i + "\\" + "Tugas");
       }else{
           System.out.println("not not");
       }
       
       if(berhasil2){
           info.append("\nberhasi membuat folder"  + namaFolder.getText() + opprt + i +"\\" + "Materi");
       }else{
           System.out.println("not not");
       }
       
       }
       boolean berhasil = dir.mkdirs();
       if(berhasil){
           info.append("\nberhasi membuat folder"  + namaFolder.getText() + opprt + i);
       }else{
           System.out.println("not not");
       }
       
       }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void namaFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaFolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaFolderActionPerformed

    private void inputTextFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTextFileActionPerformed

    private void inputRekursifBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputRekursifBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        String fileName = f.getAbsolutePath();
        inputTextFile.setText(fileName);
    }//GEN-LAST:event_inputRekursifBtnActionPerformed

    private void operatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_operatorActionPerformed

    private void tugasMateriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tugasMateriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tugasMateriActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        tableRecent.setVisible(true);
        tableRecent.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
     
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

        File fol = new File(inputTextFile.getText());
        
        
File[] listOfFiles = fol.listFiles();

int no = 0;

for (File file : listOfFiles) {
    no++;
    if (file.isFile()) {
        File dest = new File(file.getParent() + "\\" + no + "_" + file.getName());  
        System.out.println(dest);
        System.out.println(file.getName());
        if(file.renameTo(dest)){
          info.append("berhasil merename file : " + file.getName() + "to" + dest.getName());
        }else{
           info.append("tidak berhasil merename file");
        }
       
      
    }
}
       
                
    }//GEN-LAST:event_jButton10ActionPerformed

    private void gbCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gbCboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gbCboxActionPerformed

    private void wavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wavActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wavActionPerformed

    private void allAudioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_allAudioStateChanged
         if(allAudio.isSelected()){
            mpeg.setSelected(true);
            mp3.setSelected(true);
            wav.setSelected(true);
            ogg.setSelected(true);
            

        }

        if(!allAudio.isSelected()){
            mpeg.setSelected(false);
            mp3.setSelected(false);
            wav.setSelected(false);
            ogg.setSelected(false);
           
        }
    }//GEN-LAST:event_allAudioStateChanged

    private void mp3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mp3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mp3ActionPerformed

    private void flaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_flaActionPerformed

    private void aiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aiActionPerformed

    private void psdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_psdActionPerformed

    private void drawioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drawioActionPerformed
   
    public void getFoundFile(){
        File folder = new File(pathInputLocation.getText());
File[] listOfFiles = folder.listFiles();
String name = folder.getName();
    

int filesImgFound = 0, 
    filesDocFound = 0,
    filesVidFound = 0,
    filesPrgFound = 0;


for (int i = 0; i < listOfFiles.length; i++) {
     int j = listOfFiles[i].getName().lastIndexOf(".");

   String ex = listOfFiles[i].getName().substring(j+1);
        System.out.println(ex);
    
  if (listOfFiles[i].isFile() && ex.contains("png") ||ex.contains("jpg") ) {
      filesImgFound++;
    imagesFound.setText("Images : " + filesImgFound);
  } 
  else if (listOfFiles[i].isFile() && ex.contains("doc") ||ex.contains("ppt") || ex.contains("pdf")){
      filesDocFound++;
    docsFound.setText("Documents : " + filesDocFound);
  }
   else if (listOfFiles[i].isFile() && ex.contains("avi") ||ex.contains("mp4") || ex.contains("mov")){
     filesVidFound++;
    vidiosFound.setText("Vidios : " + filesVidFound);
  }
   else if (listOfFiles[i].isFile() && ex.contains("py") ||ex.contains("java") || ex.contains("php")|| ex.contains("js")|| ex.contains("html")|| ex.contains("css")){
     filesVidFound++;
    prgsFound.setText("Programs : " + filesPrgFound);
  }
  else if (listOfFiles[i].isDirectory()) {
    System.out.println("Directory " + listOfFiles[i].getName());
  }
  
}
    }
    public void moveFileImages(String extensionFile, String nameFiles, String nameFolder, int no) throws IOException{
       
                File file = new File(pathInputLocation.getText() +"\\"+ nameFiles);
		BasicFileAttributes attrs;
		try {
		    attrs = Files.readAttributes(file.toPath(), BasicFileAttributes.class);
		    FileTime time = attrs.lastModifiedTime();
		    
		    String year = "yyyy";
                    String datef = "yyyy-MM-dd";
		    SimpleDateFormat simpleYear = new SimpleDateFormat(year);
                    SimpleDateFormat simpleDate = new SimpleDateFormat(datef);
	           
		    String formattedYear = simpleYear.format( new Date( time.toMillis() ) );
                    String formattedDate = simpleDate.format( new Date( time.toMillis() ) );
                    
                    File file1 = new File(pathOutputLocation.getText() + "\\"+ nameFolder + "\\" + extensionFile + "\\" + formattedYear +"\\"+ formattedDate);
                    
                    if(file1.mkdirs()){
                        infoFileSorter.append("(INFO!)Berhasil membuat folder : "+extensionFile.toUpperCase()+"\n");
                    }
                    
                    SimpleDateFormat formatDate = new SimpleDateFormat("HHmmssddMMyyy");
               
                    double randomNumber = Math.random();
                    double d = randomNumber * 30;
            
                    int rand = (int)d;
                    
                    Date date = new Date();
                    Path temp = Files.move (Paths.get(pathInputLocation.getText()+"\\"+nameFiles),  
                    Paths.get(pathOutputLocation.getText()+ "\\" + nameFolder + "\\"+extensionFile +"\\"+ formattedYear +"\\"+ formattedDate +"\\" + nameFiles ));
                                   
                    infoFileSorter.append(no+")." + nameFiles + "\nBerhasil Dipindahkan...\n");      
                    DefaultTableModel mdhs = (DefaultTableModel) tableHistory.getModel();
                         
                    mdhs.addRow(new Object[]{nameFiles, pathInputLocation.getText(),pathOutputLocation.getText()+ "\\"+ nameFolder + "\\" + extensionFile + "\\" + formattedYear +"\\"+ formattedDate, extensionFile.toUpperCase()});  
                   
		    System.out.println( "The file creation date and time is: " + formattedYear );
                     writeHistoryFile();
		}catch (IOException e) {
		    e.printStackTrace();
		} 
        
                       
    }
    
    
    public void writeFileText(){
        try{
                //the file path
               File file = new File("D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\table.txt");
               //if the file not exist create one
               if(!file.exists()){
                   file.createNewFile();
               }
               
               FileWriter fw = new FileWriter(file.getAbsoluteFile());
               BufferedWriter bw = new BufferedWriter(fw);
                   bw.write("Recent Path Input, Recent Path Output");
               //loop for jtable rows
               for(int i = 0; i < recentPathTabel.getRowCount(); i++){
                   bw.append("\r\n");
                   for(int j = 0; j < recentPathTabel.getColumnCount(); j++){
                     
                       bw.append(recentPathTabel.getModel().getValueAt(i, j)+ "#");
                   }
                   
                   
               }
               //close BufferedWriter
               bw.close();
               //close FileWriter 
               fw.close();
               JOptionPane.showMessageDialog(null, "Data Exported");
               
               }catch(Exception ex){
                   ex.printStackTrace();
               }
    }
    
     public void writeHistoryFile(){
        try{
                //the file path
               File file = new File("D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\history.txt");
               //if the file not exist create one
               if(!file.exists()){
                   file.createNewFile();
               }
               
               FileWriter fw = new FileWriter(file.getAbsoluteFile());
               BufferedWriter bw = new BufferedWriter(fw);
                   bw.write("Name File, Input Path, Output Path, Extension");
               //loop for jtable rows
               for(int i = 0; i < tableHistory.getRowCount(); i++){
                   bw.append("\r\n");
                   for(int j = 0; j < tableHistory.getColumnCount(); j++){
                     
                       bw.append(tableHistory.getModel().getValueAt(i, j)+ "#");
                   }
                   
                   
               }
               //close BufferedWriter
               bw.close();
               //close FileWriter 
               fw.close();
               
               
               }catch(Exception ex){
                   ex.printStackTrace();
               }
    }
     
      public void writeHistoryHidden(){
        try{
                //the file path
               File file = new File("D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\hidden.txt");
               //if the file not exist create one
               if(!file.exists()){
                   file.createNewFile();
               }
               
               FileWriter fw = new FileWriter(file.getAbsoluteFile());
               BufferedWriter bw = new BufferedWriter(fw);
                   bw.write("Name File, Path, Extension, Tanggal");
               //loop for jtable rows
               for(int i = 0; i < tableHidden.getRowCount(); i++){
                   bw.append("\r\n");
                   for(int j = 0; j < tableHidden.getColumnCount(); j++){
                     
                       bw.append(tableHidden.getModel().getValueAt(i, j)+ "#");
                   }
                   
                   
               }
               //close BufferedWriter
               bw.close();
               //close FileWriter 
               fw.close();
               
               
               }catch(Exception ex){
                   ex.printStackTrace();
               }
    }
    
    
    public void readFileText(){
        try{
        String filePath = "D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\table.txt";
        File file = new File(filePath);
        
        
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)recentPathTabel.getModel();
            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableLines = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("#");
                model.addRow(dataRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     public void readHistoryFile(){
        try{
        String filePath = "D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\history.txt";
        File file = new File(filePath);
        
        
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tableHistory.getModel();
            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableHistory = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableHistory.length; i++)
            {
                String line = tableHistory[i].toString().trim();
                String[] dataRow = line.split("#");
                model.addRow(dataRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     public void readHiddenFile(){
        try{
        String filePath = "D:\\Deskop\\Data Ibnu\\Data Pemrograman\\filesorter\\src\\filesorter\\hidden.txt";
        File file = new File(filePath);
        
        
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)tableHidden.getModel();
            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableHidden = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableHidden.length; i++)
            {
                String line = tableHidden[i].toString().trim();
                String[] dataRow = line.split("#");
                model.addRow(dataRow);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(fileSorterApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fileSorterApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fileSorterApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fileSorterApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fileSorterApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fileSorterApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ai;
    private javax.swing.JCheckBox allAudio;
    private javax.swing.JCheckBox allDocument;
    private javax.swing.JCheckBox allImages;
    private javax.swing.JCheckBox allVidio;
    private javax.swing.JCheckBox aviCheck;
    private javax.swing.JCheckBox batCheck;
    private javax.swing.JSpinner countFolder;
    private javax.swing.JCheckBox cppCheck;
    private javax.swing.JCheckBox cssCheck;
    private javax.swing.JCheckBox csvCheck;
    private javax.swing.JCheckBox deleteTempFolder;
    private javax.swing.JLabel docsFound;
    private javax.swing.JCheckBox drawio;
    private javax.swing.JCheckBox exeCheck;
    private javax.swing.JCheckBox fla;
    private javax.swing.JCheckBox gbCbox;
    private javax.swing.JCheckBox hideFolder;
    private javax.swing.JCheckBox htmlCheck;
    private javax.swing.JLabel imagesFound;
    private javax.swing.JTextArea info;
    private javax.swing.JTextArea infoFileSorter;
    private javax.swing.JButton inputFileLocation;
    private javax.swing.JButton inputRekursifBtn;
    private javax.swing.JTextField inputTextFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JCheckBox javCheck;
    private javax.swing.JCheckBox javascriptCheck;
    private javax.swing.JCheckBox jpgCheck;
    private javax.swing.JCheckBox jsonCheck;
    private javax.swing.JCheckBox kbCbox;
    private javax.swing.JCheckBox kuis;
    private javax.swing.JCheckBox mbCbox;
    private javax.swing.JCheckBox movCheck;
    private javax.swing.JCheckBox mp3;
    private javax.swing.JCheckBox mp4Check;
    private javax.swing.JCheckBox mpeg;
    private javax.swing.JCheckBox mpegCheck;
    private javax.swing.JTextField namaFolder;
    private javax.swing.JCheckBox ogg;
    private javax.swing.JComboBox<String> operator;
    private javax.swing.JTextField pathInputLocation;
    private javax.swing.JTextField pathOutputLocation;
    private javax.swing.JCheckBox pdfCheck;
    private javax.swing.JCheckBox phpCheck;
    private javax.swing.JCheckBox pngCheck;
    private javax.swing.JCheckBox pptCheck;
    private javax.swing.JLabel prgsFound;
    private javax.swing.JCheckBox psd;
    private javax.swing.JCheckBox pyCheck;
    private javax.swing.JCheckBox rarCheck;
    private javax.swing.JTable recentPathTabel;
    private javax.swing.JCheckBox renameFiles;
    private javax.swing.JCheckBox showFolder;
    private javax.swing.JSpinner sizeFile;
    private javax.swing.JCheckBox sqlCheck;
    private javax.swing.JCheckBox svgCheck;
    private javax.swing.JTable tableHidden;
    private javax.swing.JTable tableHistory;
    private javax.swing.JCheckBox tugasMateri;
    private javax.swing.JCheckBox uas;
    private javax.swing.JCheckBox uts;
    private javax.swing.JLabel vidiosFound;
    private javax.swing.JCheckBox wav;
    private javax.swing.JCheckBox wordCheck;
    private javax.swing.JCheckBox xlsCheck;
    private javax.swing.JCheckBox zipCheck;
    // End of variables declaration//GEN-END:variables

    private void rmdir(File tmpF) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
